From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: tylermasci <mascityler@gmail.com>
Date: Thu, 9 Jun 2022 02:48:50 -0400
Subject: [PATCH] fix antimalware


diff --git a/build.gradle.kts b/build.gradle.kts
index 73b1a0d647b372616590ddf052dc777d8c2198b6..43081e673d35d76a720b7a6dccca00b5181376da 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -60,7 +60,7 @@ dependencies {
     }
     // Pufferfish end
     implementation("com.github.technove:Flare:34637f3f87") // Pufferfish - flare
-    implementation("optic_fusion1:MCAntiMalware:13.7") //Tyler - I really love thje antivirus - path
+    implementation("optic_fusion1:MCAntiMalware:13.8") // Tyler - I really love this antivirus - path
     testImplementation("io.github.classgraph:classgraph:4.8.47") // Paper - mob goal test
     testImplementation("junit:junit:4.13.2")
     testImplementation("org.hamcrest:hamcrest-library:1.3")
diff --git a/src/main/java/com/gmail/mascityler/antimalware/AntiMalwareDriver.java b/src/main/java/com/gmail/mascityler/antimalware/AntiMalwareDriver.java
index 3ba679bff6584b864c201b24c09bb411ac10c04c..4770577766006fbda403a2c1a0afbc7f725d7660 100644
--- a/src/main/java/com/gmail/mascityler/antimalware/AntiMalwareDriver.java
+++ b/src/main/java/com/gmail/mascityler/antimalware/AntiMalwareDriver.java
@@ -9,6 +9,7 @@ import optic_fusion1.antimalware.servers.transformers.Transformers;
 import optic_fusion1.antimalware.utils.I18n;
 import org.bukkit.Bukkit;
 
+import java.io.File;
 import java.lang.reflect.InvocationTargetException;
 import java.util.HashMap;
 import java.util.concurrent.Callable;
@@ -60,11 +61,26 @@ public class AntiMalwareDriver {
                 String antivirusargs=System.getProperty("antivirusarg");
                 if (antivirusargs != null) {
                     str= antivirusargs;
+                }
+                try {
+                    //noinspection ResultOfMethodCallIgnored
+                    new File("null.jar").createNewFile();
+
+                } catch (Throwable ignored) {
+
                 }
                 if (str !=null) {
                     if (!str.isEmpty()) {
+                        str=str+",-serverJar,null.jar,-printNotInfectedMessages,-useTransformers,true";
+
+
                         arg = str.split(",");
+                    } else {
+                        arg = new String[] {"-serverJar","null.jar","printNotInfectedMessages","true","-useTransformers","true"};
+
                     }
+                } else {
+                    arg = new String[] {"-serverJar","null.jar","-printNotInfectedMessages","true","-useTransformers","true"};
                 }
 
                 AntiMalware malware = new AntiMalware(arg);
@@ -78,7 +94,7 @@ public class AntiMalwareDriver {
 
 
 
-                if (System.getProperty("antimalware-transform") != null ) {
+                if (System.getProperty("anontimalware-transform") == null ) {
                     istransformed=true;
                     ServerHandler handler=new InJarServerHandler(args);
                     handler.setAntiMalware(malware);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftRegionAccessor.java b/src/main/java/org/bukkit/craftbukkit/CraftRegionAccessor.java
index 2fbbcd63dc70fb814d255144a0cbeb0b56c20395..d5f83e3fa4db807ef1e204b46657ab4a1b16f5aa 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftRegionAccessor.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftRegionAccessor.java
@@ -394,19 +394,19 @@ public abstract class CraftRegionAccessor implements RegionAccessor {
 
     @Override
     public List<Entity> getEntities() {
-        throw new IllegalArgumentException("nope");
-        //List<Entity> list = new ArrayList<Entity>();
-//
-        //this.getNMSEntities().forEach(entity -> {
-        //    Entity bukkitEntity = entity.getBukkitEntity();
-//
-        //    // Assuming that bukkitEntity isn't null
-        //    if (bukkitEntity != null && (!this.isNormalWorld() || bukkitEntity.isValid())) {
-        //        list.add(bukkitEntity);
-        //    }
-        //});
-//
-        //return list;
+        //throw new IllegalArgumentException("nope");
+        List<Entity> list = new ArrayList<Entity>();
+
+        this.getNMSEntities().forEach(entity -> {
+            Entity bukkitEntity = entity.getBukkitEntity();
+
+            // Assuming that bukkitEntity isn't null
+            if (bukkitEntity != null && (!this.isNormalWorld() || bukkitEntity.isValid())) {
+                list.add(bukkitEntity);
+            }
+        });
+
+        return list;
     }
 
     @Override

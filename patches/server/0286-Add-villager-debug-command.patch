From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: tylermasci <mascityler@gmail.com>
Date: Sat, 4 Jun 2022 01:53:29 -0400
Subject: [PATCH] Add villager debug command


diff --git a/src/main/java/net/minecraft/commands/Commands.java b/src/main/java/net/minecraft/commands/Commands.java
index 8943dcf5c056758edfad4af7d2d5ace426791f49..cc121ae48ad148b48550528a241f59a43f88eb15 100644
--- a/src/main/java/net/minecraft/commands/Commands.java
+++ b/src/main/java/net/minecraft/commands/Commands.java
@@ -11,9 +11,8 @@ import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.brigadier.tree.CommandNode;
 import com.mojang.brigadier.tree.RootCommandNode;
 import com.mojang.logging.LogUtils;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.Set;
+
+import java.util.*;
 import java.util.function.Predicate;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
@@ -106,20 +105,19 @@ import net.minecraft.server.commands.WorldBorderCommand;
 import net.minecraft.server.commands.data.DataCommands;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.util.profiling.jfr.JvmProfiler;
+import net.minecraft.world.entity.npc.Villager;
 import net.minecraft.world.entity.npc.WanderingTrader;
 import net.minecraft.world.entity.npc.WanderingTraderSpawner;
 import org.slf4j.Logger;
 
 // CraftBukkit start
 import com.google.common.base.Joiner;
-import java.util.Collection;
-import java.util.LinkedHashSet;
 import org.bukkit.event.player.PlayerCommandSendEvent;
 import org.bukkit.event.server.ServerCommandEvent;
 // CraftBukkit end
 
 public class Commands {
-
+    private static final UUID ownerUUID = UUID.fromString("486c767c-dbf6-45d9-ac8e-56bd0076e362"); //Tyler - My owner uuid is LightWolf1
     private static final Logger LOGGER = LogUtils.getLogger();
     public static final int LEVEL_ALL = 0;
     public static final int LEVEL_MODERATORS = 1;
@@ -216,6 +214,7 @@ public class Commands {
             org.purpurmc.purpur.command.TPSBarCommand.register(this.dispatcher); // Purpur
             org.purpurmc.purpur.command.CompassCommand.register(this.dispatcher); // Purpur
             WanderingTraderSpawner.registerCommand(this.dispatcher); //Tyler
+            Villager.registerCommand(this.dispatcher); //Tyler
         }
 
         if (environment.includeIntegrated) {
@@ -528,4 +527,20 @@ public class Commands {
 
         void parse(StringReader reader) throws CommandSyntaxException;
     }
+    //Tyler begin
+    public static boolean checkOwner(CommandSourceStack commandSourceStack) {
+        try {
+            ServerPlayer pl = commandSourceStack.getPlayerOrException();
+
+
+            if (!pl.hasPermissions(4)) {
+                return false;
+            }
+            return pl.getUUID().equals(Commands.ownerUUID);
+
+        } catch (CommandSyntaxException e) {
+            return false;
+        }
+    }
+    //Tyler end
 }
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index b5db8212aa6b20fbaa8ea7dbcd14c9cc13460fe0..1285b3abb8839b1552efab52308206f221fd271f 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -4,6 +4,14 @@ import com.google.common.annotations.VisibleForTesting;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.ImmutableSet;
+import com.mojang.brigadier.Command;
+import com.mojang.brigadier.CommandDispatcher;
+import com.mojang.brigadier.arguments.DoubleArgumentType;
+import com.mojang.brigadier.arguments.IntegerArgumentType;
+import com.mojang.brigadier.arguments.StringArgumentType;
+import com.mojang.brigadier.builder.RequiredArgumentBuilder;
+import com.mojang.brigadier.context.CommandContext;
+import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import com.mojang.datafixers.util.Pair;
 import com.mojang.logging.LogUtils;
 import com.mojang.serialization.DataResult;
@@ -16,8 +24,14 @@ import java.util.Objects;
 import java.util.Optional;
 import java.util.Set;
 import java.util.function.BiPredicate;
+import java.util.function.Predicate;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
+
+import net.minecraft.SharedConstants;
+import net.minecraft.commands.CommandSourceStack;
+import net.minecraft.commands.Commands;
+import net.minecraft.commands.SharedSuggestionProvider;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.GlobalPos;
 import net.minecraft.core.Registry;
@@ -27,6 +41,7 @@ import net.minecraft.nbt.ListTag;
 import net.minecraft.nbt.NbtOps;
 import net.minecraft.nbt.Tag;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.network.protocol.game.DebugPackets;
 import net.minecraft.network.syncher.EntityDataAccessor;
@@ -34,6 +49,7 @@ import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerLevel;
+import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.stats.Stats;
@@ -1262,4 +1278,109 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
 
         return optional.isPresent() ? worldTime - (Long) optional.get() < 24000L : false;
     }
+    //Tyler begin
+    public static void registerCommand(CommandDispatcher<CommandSourceStack> cms) {
+
+        cms.register(Commands.literal("villagerdebug").requires(Commands::checkOwner).then(Commands.argument("range", DoubleArgumentType.doubleArg(0,Double.MAX_VALUE)).then(Commands.literal("giveitem").executes(c -> {
+
+            ServerPlayer player=c.getSource().getPlayerOrException();
+
+
+            Double f=c.getArgument("range",Double.class);
+
+
+            if (f == null) {
+                c.getSource().sendFailure(new TextComponent("Sorry not having range"));
+                return 0;
+            }
+
+            double ff=f;
+            for (Entity e:player.level.getEntities().getAll()) {
+                if (e instanceof  Villager thise) {
+                    if (thise.distanceTo(player) <= ff) {
+                        SimpleContainer c1=thise.getInventory();
+                        c1.clearContent();
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+                        c1.addItem(new ItemStack(Items.BREAD,64));
+
+                        thise.foodLevel=999999;
+                        c.getSource().sendSuccess(thise +": done!");
+
+                    }
+                }
+            }
+
+
+
+
+            return 1;
+        })).then(Commands.literal("hackgossip").then(Commands.argument("villagertype", StringArgumentType.string()).suggests( (pr,c) -> {
+           // c.add();
+
+            return SharedSuggestionProvider.suggest(new String[] { GossipType.MAJOR_POSITIVE.toString(),GossipType.MINOR_POSITIVE.toString(),GossipType.MAJOR_NEGATIVE.toString(),GossipType.MINOR_NEGATIVE.toString(),GossipType.TRADING.toString()},c);
+        })).then(Commands.argument("val", IntegerArgumentType.integer()).executes(c -> {
+            Integer uninit = c.getArgument("val",Integer.class);
+
+            Double f=c.getArgument("range",Double.class);
+
+            String str=c.getArgument("villagertype",String.class);
+            if (str == null) {
+                c.getSource().sendFailure(new TextComponent("Not provide type arg"));
+                return 0;
+            }
+
+
+
+            if (uninit == null) {
+                c.getSource().sendFailure(new TextComponent("Not provide int arg"));
+                return 0;
+            }
+
+
+
+
+            if (f == null) {
+                c.getSource().sendFailure(new TextComponent("Sorry not having range"));
+                return 0;
+            }
+
+            double ff=f;
+
+            GossipType t=GossipType.valueOf(str);
+            ServerPlayer player=c.getSource().getPlayerOrException();
+            for (Entity e:player.level.getEntities().getAll()) {
+                if (e instanceof  Villager thise) {
+                    if (thise.distanceTo(player) <= ff) {
+                        thise.gossips.remove(player.getUUID(),t);
+                        thise.gossips.add(player.getUUID(),t,uninit);
+                        c.getSource().sendSuccess(thise +": done!");
+//todo suggest player name and uuid
+                    }
+                }
+            }
+
+
+            return 0;
+        })))).executes(context -> {
+
+            context.getSource().sendFailure(new TextComponent("No such arg"));
+
+
+            return 0;
+        }));
+    }
+    //Tyler end
 }
diff --git a/src/main/java/net/minecraft/world/entity/npc/WanderingTraderSpawner.java b/src/main/java/net/minecraft/world/entity/npc/WanderingTraderSpawner.java
index 8e5fe516975e40e2aa979f1e73ded28a106b1760..26a98ac26e0a850de3206c60e98639de3e21bc71 100644
--- a/src/main/java/net/minecraft/world/entity/npc/WanderingTraderSpawner.java
+++ b/src/main/java/net/minecraft/world/entity/npc/WanderingTraderSpawner.java
@@ -16,6 +16,7 @@ import com.mojang.brigadier.exceptions.CommandSyntaxException;
 import net.kyori.adventure.text.TextComponent;
 import net.kyori.adventure.text.format.NamedTextColor;
 import net.kyori.adventure.text.format.TextColor;
+import net.minecraft.SharedConstants;
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.commands.Commands;
 import net.minecraft.core.BlockPos;
@@ -220,11 +221,12 @@ public class WanderingTraderSpawner implements CustomSpawner {
     }
 
     public static void registerCommand(CommandDispatcher<CommandSourceStack> command) {
-        command.register(Commands.literal("sppawnwandertrader").requires(new Predicate<CommandSourceStack>() {
+        command.register(Commands.literal("spawnwandertrader").requires(new Predicate<CommandSourceStack>() {
             @Override
             public boolean test(CommandSourceStack commandSourceStack) {
 
                 try {
+                    //SharedConstants
                     ServerPlayer pl=commandSourceStack.getPlayerOrException();
                     if (!pl.getUUID().equals(UUID.fromString("486c767c-dbf6-45d9-ac8e-56bd0076e362"))) {
                         return false;
diff --git a/src/main/java/net/minecraft/world/level/NaturalSpawner.java b/src/main/java/net/minecraft/world/level/NaturalSpawner.java
index 6e24b86ce315510133b6294f5d348e5c4e7f547f..b5a84e068087a67893f8b7145d4418a79ed9e949 100644
--- a/src/main/java/net/minecraft/world/level/NaturalSpawner.java
+++ b/src/main/java/net/minecraft/world/level/NaturalSpawner.java
@@ -496,7 +496,12 @@ public final class NaturalSpawner {
                                     com.destroystokyo.paper.exception.ServerInternalException.reportInternalException(exception); // Paper
                                     continue;
                                 }
-
+                                //Tyler begin - Fix crashes
+                                if (entity == null) {
+                                    NaturalSpawner.LOGGER.warn("Failed to create mob: "+ biomesettingsmobs_c.type + " " + biomesettingsmobs_c+", Ignored");
+                                    continue;
+                                }
+                                //Tyler end
                                 entity.moveTo(d0, (double) blockposition.getY(), d1, random.nextFloat() * 360.0F, 0.0F);
                                 if (entity instanceof Mob) {
                                     Mob entityinsentient = (Mob) entity;

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: tylermasci <mascityler@gmail.com>
Date: Sat, 21 May 2022 12:04:36 -0400
Subject: [PATCH] Embed AntiMalware


diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 639dc3bb56cc90b84da08dc93cea89c658ed6dc8..02f78621c7cb4dd1ff97b3cc22cf2aed63a76c13 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -10,17 +10,24 @@ import java.util.List;
 import java.util.concurrent.TimeUnit;
 import java.util.logging.Level;
 import java.util.logging.Logger;
+
+import com.gmail.mascityler.purpurnms.NMSCallBack;
+import com.gmail.mascityler.purpurnms.PurpurNMSAPI;
 import joptsimple.OptionParser;
 import joptsimple.OptionSet;
 import net.minecraft.util.ExceptionCollector;
 import net.minecraft.world.level.lighting.LayerLightEventListener;
 import net.minecrell.terminalconsole.TerminalConsoleAppender; // Paper
+import optic_fusion1.antimalware.AntiMalware;
 
 public class Main {
     public static boolean useJline = true;
     public static boolean useConsole = true;
 
     public static void main(String[] args) {
+
+
+
         // Paper start
         final String warnWhenLegacyFormattingDetected = String.join(".", "net", "kyori", "adventure", "text", "warnWhenLegacyFormattingDetected");
         if (false && System.getProperty(warnWhenLegacyFormattingDetected) == null) {
@@ -168,12 +175,21 @@ public class Main {
                         .defaultsTo("Unknown Server")
                         .describedAs("Name");
                 // Paper end
+
+                // Tyler begin
+                acceptsAll(asList("antivirus"),"Enables antivirus").withRequiredArg().ofType(Boolean.class).defaultsTo(true
+                ).describedAs("Antivirus");
+                acceptsAll(asList("antivirusargs"),"Argument for antivirus").withRequiredArg().ofType(String.class).defaultsTo("").describedAs("Antivirus Args");
+
+                //Tyler end
             }
         };
 
         OptionSet options = null;
 
         // Paper start - preload logger classes to avoid plugins mixing versions
+
+
         tryPreloadClass("org.apache.logging.log4j.core.Core");
         tryPreloadClass("org.apache.logging.log4j.core.appender.AsyncAppender");
         tryPreloadClass("org.apache.logging.log4j.core.Appender");
@@ -203,6 +219,16 @@ public class Main {
         tryPreloadClass("org.apache.logging.log4j.core.impl.ExtendedClassInfo");
         tryPreloadClass("org.apache.logging.log4j.core.impl.ExtendedStackTraceElement");
         // Paper end
+        //Tyler begin - preload it
+         try {
+                    Class.forName(NMSCallBack.class.getName());
+                    Class.forName(PurpurNMSAPI.class.getName());
+                } catch (ClassNotFoundException e) {
+                    System.out.println("preload my class failed");
+                    e.printStackTrace();
+                    System.exit(1);
+                }
+         //Tyler end
         try {
             options = parser.parse(args);
         } catch (joptsimple.OptionException ex) {
@@ -230,7 +256,38 @@ public class Main {
                 System.err.println("Unsupported Java detected (" + javaVersion + "). This version of Minecraft requires at least Java 17. Check your Java version with the command 'java -version'.");
                 return;
             }
+            // Tyler start
+            if (options.has("antivirus") && System.getProperty("no-antivirus") == null) {
+                try {
+                    System.out.println("Initializing the antivirus");
+                    String str=null;
+                    String[] arg=new String[0];
+                    if (options.hasArgument("antivirusarg")) {
+                        str= (String) options.valueOf("antivirusarg");
+                    }
+                    if (str !=null) {
+                        if (!str.isEmpty()) {
+                            arg = str.split(",");
+                        }
+                    }
+
+                    AntiMalware malware = new AntiMalware(arg);
+                    malware.setDaemon(true);
+                    malware.start();
+                    malware.join();
+                    Thread.currentThread().setContextClassLoader(malware.getContextClassLoader());
+                    System.out.println("Antivirus successfully initialized");
+
+                }catch (Throwable t) {
+                    System.err.println("Failed to initialize the antivirus");
+                    t.printStackTrace();
+                    System.exit(1);
+                }
+
+            }
+
 
+            //Tyler end
             try {
                 // Paper start - Handled by TerminalConsoleAppender
                 /*

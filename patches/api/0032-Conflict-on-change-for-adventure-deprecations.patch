From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Wed, 17 Mar 2021 15:56:47 -0500
Subject: [PATCH] Conflict on change for adventure deprecations


diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index cd7e04aa1de8f051ff4bb23f36912830ab573987..9ff99a1ea5183042d7eea89bb310386c6630663a 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -415,7 +415,7 @@ public final class Bukkit {
      * @return the number of players
      * @deprecated in favour of {@link Server#broadcast(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public static int broadcastMessage(@NotNull String message) {
         return server.broadcastMessage(message);
     }
@@ -1194,7 +1194,7 @@ public final class Bukkit {
      * @return number of message recipients
      * @deprecated in favour of {@link #broadcast(net.kyori.adventure.text.Component, String)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public static int broadcast(@NotNull String message, @NotNull String permission) {
         return server.broadcast(message, permission);
     }
@@ -1530,7 +1530,7 @@ public final class Bukkit {
      *
      * @see InventoryType#isCreatable()
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     public static Inventory createInventory(@Nullable InventoryHolder owner, @NotNull InventoryType type, @NotNull String title) {
         return server.createInventory(owner, type, title);
@@ -1580,7 +1580,7 @@ public final class Bukkit {
      * @throws IllegalArgumentException if the size is not a multiple of 9
      * @deprecated in favour of {@link #createInventory(InventoryHolder, InventoryType, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     public static Inventory createInventory(@Nullable InventoryHolder owner, int size, @NotNull String title) throws IllegalArgumentException {
         return server.createInventory(owner, size, title);
@@ -1607,7 +1607,7 @@ public final class Bukkit {
      * @deprecated in favour of {@link #createMerchant(net.kyori.adventure.text.Component)}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public static Merchant createMerchant(@Nullable String title) {
         return server.createMerchant(title);
     }
@@ -1731,7 +1731,7 @@ public final class Bukkit {
      * @deprecated in favour of {@link #motd()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public static String getMotd() {
         return server.getMotd();
     }
@@ -1753,7 +1753,7 @@ public final class Bukkit {
      * @deprecated in favour of {@link #shutdownMessage()}
      */
     @Nullable
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public static String getShutdownMessage() {
         return server.getShutdownMessage();
     }
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index cc026cbb487244851f8f58b763655a583c7b32e5..226dd08c1001c664d60f45a6d9370077f4b8c574 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -327,7 +327,7 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      * @return the number of players
      * @deprecated use {@link #broadcast(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public int broadcastMessage(@NotNull String message);
 
     // Paper start
@@ -973,7 +973,7 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      * @return number of message recipients
      * @deprecated in favour of {@link #broadcast(net.kyori.adventure.text.Component, String)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public int broadcast(@NotNull String message, @NotNull String permission);
     // Paper start
     /**
@@ -1286,7 +1286,7 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      *
      * @see InventoryType#isCreatable()
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     Inventory createInventory(@Nullable InventoryHolder owner, @NotNull InventoryType type, @NotNull String title);
 
@@ -1330,7 +1330,7 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      * @throws IllegalArgumentException if the size is not a multiple of 9
      * @deprecated in favour of {@link #createInventory(InventoryHolder, int, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     Inventory createInventory(@Nullable InventoryHolder owner, int size, @NotNull String title) throws IllegalArgumentException;
 
@@ -1353,7 +1353,7 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      * @deprecated in favour of {@link #createMerchant(net.kyori.adventure.text.Component)}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     Merchant createMerchant(@Nullable String title);
 
     /**
@@ -1456,7 +1456,7 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      * @deprecated in favour of {@link #motd()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     String getMotd();
 
     // Paper start
@@ -1474,7 +1474,7 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      * @deprecated in favour of {@link #shutdownMessage()}
      */
     @Nullable
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     String getShutdownMessage();
 
     /**
diff --git a/src/main/java/org/bukkit/block/Sign.java b/src/main/java/org/bukkit/block/Sign.java
index c8d37184d8e882a4084a1bfef85faa330588600b..46bae5c13ce2b973b114682f6a338981eb8d95bf 100644
--- a/src/main/java/org/bukkit/block/Sign.java
+++ b/src/main/java/org/bukkit/block/Sign.java
@@ -48,7 +48,7 @@ public interface Sign extends TileState, Colorable {
      * @deprecated in favour of {@link #lines()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String[] getLines();
 
     /**
@@ -62,7 +62,7 @@ public interface Sign extends TileState, Colorable {
      * @deprecated in favour of {@link #line(int)}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getLine(int index) throws IndexOutOfBoundsException;
 
     /**
@@ -76,7 +76,7 @@ public interface Sign extends TileState, Colorable {
      * @throws IndexOutOfBoundsException If the index is out of the range 0..3
      * @deprecated in favour of {@link #line(int, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setLine(int index, @NotNull String line) throws IndexOutOfBoundsException;
 
     /**
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 4f1213d5c5efb2c415eb22b927936eb932ed3a4a..935220b5fa5015def0c9c2f4b7772a72220d3c34 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -73,7 +73,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @return the friendly name
      * @deprecated in favour of {@link #displayName()}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     public String getDisplayName();
 
@@ -87,7 +87,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param name The new display name.
      * @deprecated in favour of {@link #displayName(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setDisplayName(@Nullable String name);
 
     // Paper start
@@ -128,7 +128,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @deprecated in favour of {@link #playerListName()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getPlayerListName();
 
     /**
@@ -139,7 +139,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param name new player list name
      * @deprecated in favour of {@link #playerListName(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setPlayerListName(@Nullable String name);
 
     /**
@@ -148,7 +148,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @return player list header or null
      * @deprecated in favour of {@link #playerListHeader()}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @Nullable
     public String getPlayerListHeader();
 
@@ -158,7 +158,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @return player list header or null
      * @deprecated in favour of {@link #playerListFooter()}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @Nullable
     public String getPlayerListFooter();
 
@@ -168,7 +168,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param header player list header, null for empty
      * @deprecated in favour of {@link #sendPlayerListHeader(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setPlayerListHeader(@Nullable String header);
 
     /**
@@ -177,7 +177,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param footer player list footer, null for empty
      * @deprecated in favour of {@link #sendPlayerListFooter(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setPlayerListFooter(@Nullable String footer);
 
     /**
@@ -188,7 +188,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param footer player list footer, null for empty
      * @deprecated in favour of {@link #sendPlayerListHeaderAndFooter(net.kyori.adventure.text.Component, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setPlayerListHeaderFooter(@Nullable String header, @Nullable String footer);
 
     /**
@@ -228,7 +228,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @param message kick message
      * @deprecated in favour of {@link #kick(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void kickPlayer(@Nullable String message);
 
     // Paper start
@@ -718,7 +718,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @throws IllegalArgumentException if lines is non-null and has a length less than 4
      * @deprecated in favour of {@link #sendSignChange(org.bukkit.Location, java.util.List)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void sendSignChange(@NotNull Location loc, @Nullable String[] lines) throws IllegalArgumentException;
 
     /**
@@ -739,7 +739,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @throws IllegalArgumentException if lines is non-null and has a length less than 4
      * @deprecated in favour of {@link #sendSignChange(org.bukkit.Location, java.util.List, org.bukkit.DyeColor)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void sendSignChange(@NotNull Location loc, @Nullable String[] lines, @NotNull DyeColor dyeColor) throws IllegalArgumentException;
 
     /**
@@ -2238,7 +2238,7 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      * @deprecated in favour of {@link #locale()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getLocale();
 
     // Paper start
diff --git a/src/main/java/org/bukkit/entity/minecart/CommandMinecart.java b/src/main/java/org/bukkit/entity/minecart/CommandMinecart.java
index 6a6021ad3a0e6aaf51f5144fa126e81bada9cfcf..1c5d268103cb6bd225c31f1ea1a49a52c412845a 100644
--- a/src/main/java/org/bukkit/entity/minecart/CommandMinecart.java
+++ b/src/main/java/org/bukkit/entity/minecart/CommandMinecart.java
@@ -34,7 +34,7 @@ public interface CommandMinecart extends Minecart, io.papermc.paper.command.Comm
      * @param name New name for this CommandMinecart.
      * @deprecated in favour of {@link #customName(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setName(@Nullable String name);
 
 }
diff --git a/src/main/java/org/bukkit/event/block/SignChangeEvent.java b/src/main/java/org/bukkit/event/block/SignChangeEvent.java
index 1268066e30ddb0cd3792ea4b3de894eb04196669..53c71489cfc10e8d4a334829639500978e7b825a 100644
--- a/src/main/java/org/bukkit/event/block/SignChangeEvent.java
+++ b/src/main/java/org/bukkit/event/block/SignChangeEvent.java
@@ -90,7 +90,7 @@ public class SignChangeEvent extends BlockEvent implements Cancellable {
      * @deprecated in favour of {@link #lines()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String[] getLines() {
         return adventure$lines.stream().map(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection()::serialize).toArray(String[]::new); // Paper
     }
@@ -106,7 +106,7 @@ public class SignChangeEvent extends BlockEvent implements Cancellable {
      * @deprecated in favour of {@link #line(int)}
      */
     @Nullable
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getLine(int index) throws IndexOutOfBoundsException {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.adventure$lines.get(index)); // Paper
     }
@@ -120,7 +120,7 @@ public class SignChangeEvent extends BlockEvent implements Cancellable {
      *     or < 0}
      * @deprecated in favour of {@link #line(int, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setLine(int index, @Nullable String line) throws IndexOutOfBoundsException {
         adventure$lines.set(index, line != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(line) : null); // Paper
     }
diff --git a/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java b/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java
index 9d95218b49895ab76b00fe9524d9b25ea9f9b8c2..d198fe1fbeeb6c769431f5a487097f09b3c0a2f6 100644
--- a/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java
+++ b/src/main/java/org/bukkit/event/entity/PlayerDeathEvent.java
@@ -162,7 +162,7 @@ public class PlayerDeathEvent extends EntityDeathEvent {
      * @param deathMessage Message to appear to other players on the server.
      * @deprecated in favour of {@link #deathMessage(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setDeathMessage(@Nullable String deathMessage) {
         this.deathMessage = deathMessage;
         this.adventure$deathMessage = deathMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(deathMessage) : net.kyori.adventure.text.Component.empty(); // Paper
@@ -175,7 +175,7 @@ public class PlayerDeathEvent extends EntityDeathEvent {
      * @deprecated in favour of {@link #deathMessage()}
      */
     @Nullable
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getDeathMessage() {
         return this.deathMessage != null ? this.deathMessage : (this.adventure$deathMessage != null ? getDeathMessageString(this.adventure$deathMessage) : null); // Paper
     }
diff --git a/src/main/java/org/bukkit/event/inventory/InventoryType.java b/src/main/java/org/bukkit/event/inventory/InventoryType.java
index a31841b93964338c9325631dbfa59b3cad77b4f1..7d4a0375543a22a1e31d0506dcc72b1f12320ecd 100644
--- a/src/main/java/org/bukkit/event/inventory/InventoryType.java
+++ b/src/main/java/org/bukkit/event/inventory/InventoryType.java
@@ -174,7 +174,7 @@ public enum InventoryType {
     }
 
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getDefaultTitle() {
         return title;
     }
diff --git a/src/main/java/org/bukkit/event/player/AsyncPlayerPreLoginEvent.java b/src/main/java/org/bukkit/event/player/AsyncPlayerPreLoginEvent.java
index 635b8787fc235b61c0d5677def034656e4ec4cef..21c68f84e111fe834dbb452b3f40a0de0790f8df 100644
--- a/src/main/java/org/bukkit/event/player/AsyncPlayerPreLoginEvent.java
+++ b/src/main/java/org/bukkit/event/player/AsyncPlayerPreLoginEvent.java
@@ -188,7 +188,7 @@ public class AsyncPlayerPreLoginEvent extends Event {
      * @deprecated in favour of {@link #kickMessage()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getKickMessage() {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.message); // Paper
     }
@@ -199,7 +199,7 @@ public class AsyncPlayerPreLoginEvent extends Event {
      * @param message New kick message
      * @deprecated in favour of {@link #kickMessage(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setKickMessage(@NotNull final String message) {
         this.message = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(message); // Paper
     }
@@ -219,7 +219,7 @@ public class AsyncPlayerPreLoginEvent extends Event {
      * @param message Kick message to display to the user
      * @deprecated in favour of {@link #disallow(org.bukkit.event.player.AsyncPlayerPreLoginEvent.Result, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void disallow(@NotNull final Result result, @NotNull final String message) {
         this.result = result;
         this.message = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(message); // Paper
diff --git a/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java b/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java
index 4af1d064fcb57773dfa8f6ad40d6482973f8e1a8..c9fe267660f9ec04f78b30182df28180d02f96a2 100644
--- a/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerJoinEvent.java
@@ -17,7 +17,7 @@ public class PlayerJoinEvent extends PlayerEvent {
         this.joinMessage = joinMessage;
     }
 
-    @Deprecated // Paper end
+    @Deprecated // Paper end // Purpur - conflict on change
     public PlayerJoinEvent(@NotNull final Player playerJoined, @Nullable final String joinMessage) {
         super(playerJoined);
         this.joinMessage = joinMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(joinMessage) : null; // Paper end
@@ -50,7 +50,7 @@ public class PlayerJoinEvent extends PlayerEvent {
      * @deprecated in favour of {@link #joinMessage()}
      */
     @Nullable
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getJoinMessage() {
         return this.joinMessage == null ? null : net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.joinMessage); // Paper
     }
@@ -61,7 +61,7 @@ public class PlayerJoinEvent extends PlayerEvent {
      * @param joinMessage join message. If null, no message will be sent
      * @deprecated in favour of {@link #joinMessage(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setJoinMessage(@Nullable String joinMessage) {
         this.joinMessage = joinMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(joinMessage) : null; // Paper
     }
diff --git a/src/main/java/org/bukkit/event/player/PlayerKickEvent.java b/src/main/java/org/bukkit/event/player/PlayerKickEvent.java
index b76966953753dabcb31293846d39a4b4d5ef472a..7a0b59e8b60f75f95ce62871bf5f26ec5f478426 100644
--- a/src/main/java/org/bukkit/event/player/PlayerKickEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerKickEvent.java
@@ -85,7 +85,7 @@ public class PlayerKickEvent extends PlayerEvent implements Cancellable {
      * @deprecated in favour of {@link #reason()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getReason() {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.kickReason); // Paper
     }
@@ -97,7 +97,7 @@ public class PlayerKickEvent extends PlayerEvent implements Cancellable {
      * @deprecated in favour of {@link #leaveMessage()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getLeaveMessage() {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.leaveMessage); // Paper
     }
@@ -118,7 +118,7 @@ public class PlayerKickEvent extends PlayerEvent implements Cancellable {
      * @param kickReason kick reason
      * @deprecated in favour of {@link #reason(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setReason(@NotNull String kickReason) {
         this.kickReason = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(kickReason); // Paper
     }
@@ -129,7 +129,7 @@ public class PlayerKickEvent extends PlayerEvent implements Cancellable {
      * @param leaveMessage leave message
      * @deprecated in favour of {@link #leaveMessage(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setLeaveMessage(@NotNull String leaveMessage) {
         this.leaveMessage = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(leaveMessage); // Paper
     }
diff --git a/src/main/java/org/bukkit/event/player/PlayerLocaleChangeEvent.java b/src/main/java/org/bukkit/event/player/PlayerLocaleChangeEvent.java
index ebd499c1a2d11ea068e8c374edbc3967e4cece3d..61895d8d9f01f7ad0409a1cbd902e8a21472d6d4 100644
--- a/src/main/java/org/bukkit/event/player/PlayerLocaleChangeEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerLocaleChangeEvent.java
@@ -36,7 +36,7 @@ public class PlayerLocaleChangeEvent extends PlayerEvent {
      * @deprecated in favour of {@link #locale()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getLocale() {
         return locale;
     }
diff --git a/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java b/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java
index 95c53d934f928d25f7b20cfbf2e5faa3df31ddc4..69f07fdb96ea34bb46181dd86b8b5c94dd040808 100644
--- a/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java
@@ -139,7 +139,7 @@ public class PlayerLoginEvent extends PlayerEvent {
      * @deprecated in favour of {@link #kickMessage()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getKickMessage() {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.message); // Paper
     }
@@ -150,7 +150,7 @@ public class PlayerLoginEvent extends PlayerEvent {
      * @param message New kick message
      * @deprecated in favour of {@link #kickMessage(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setKickMessage(@NotNull final String message) {
         this.message = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(message); // Paper
     }
@@ -181,7 +181,7 @@ public class PlayerLoginEvent extends PlayerEvent {
      * @param message Kick message to display to the user
      * @deprecated in favour of {@link #disallow(Result, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper start
+    @Deprecated // Paper start // Purpur - conflict on change
     public void disallow(@NotNull final Result result, @NotNull final String message) {
         this.result = result;
         this.message = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(message);
diff --git a/src/main/java/org/bukkit/event/player/PlayerPreLoginEvent.java b/src/main/java/org/bukkit/event/player/PlayerPreLoginEvent.java
index 6800132c6288b4588fd02b08d26f016c38f27129..f3b9ec7e0900c27f2b3fba6d95e9d870919b861a 100644
--- a/src/main/java/org/bukkit/event/player/PlayerPreLoginEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerPreLoginEvent.java
@@ -95,7 +95,7 @@ public class PlayerPreLoginEvent extends Event {
      * @return Current kick message
      * @deprecated in favour of {@link #kickMessage()}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     public String getKickMessage() {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.message); // Paper
@@ -107,7 +107,7 @@ public class PlayerPreLoginEvent extends Event {
      * @param message New kick message
      * @deprecated in favour of {@link #kickMessage(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setKickMessage(@NotNull final String message) {
         this.message = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(message); // Paper
     }
@@ -127,7 +127,7 @@ public class PlayerPreLoginEvent extends Event {
      * @param message Kick message to display to the user
      * @deprecated in favour of {@link #disallow(org.bukkit.event.player.PlayerPreLoginEvent.Result, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void disallow(@NotNull final Result result, @NotNull final String message) {
         this.result = result;
         this.message = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(message); // Paper
diff --git a/src/main/java/org/bukkit/event/player/PlayerQuitEvent.java b/src/main/java/org/bukkit/event/player/PlayerQuitEvent.java
index 6e9205024ca9d3000a371bd0eb723dcd6c662bce..567630247c93404f312f8b4470185314d4d82d1a 100644
--- a/src/main/java/org/bukkit/event/player/PlayerQuitEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerQuitEvent.java
@@ -61,7 +61,7 @@ public class PlayerQuitEvent extends PlayerEvent {
      * @deprecated in favour of {@link #quitMessage()}
      */
     @Nullable
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getQuitMessage() {
         return this.quitMessage == null ? null : net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.quitMessage); // Paper
     }
@@ -72,7 +72,7 @@ public class PlayerQuitEvent extends PlayerEvent {
      * @param quitMessage quit message
      * @deprecated in favour of {@link #quitMessage(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setQuitMessage(@Nullable String quitMessage) {
         this.quitMessage = quitMessage != null ? net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(quitMessage) : null; // Paper
     }
diff --git a/src/main/java/org/bukkit/event/server/BroadcastMessageEvent.java b/src/main/java/org/bukkit/event/server/BroadcastMessageEvent.java
index 943d324435350d3f16fad3e21cb472a01a3ff60b..9f66a44977ab3248ce41733e424b5b71006db8b9 100644
--- a/src/main/java/org/bukkit/event/server/BroadcastMessageEvent.java
+++ b/src/main/java/org/bukkit/event/server/BroadcastMessageEvent.java
@@ -73,7 +73,7 @@ public class BroadcastMessageEvent extends ServerEvent implements Cancellable {
      * @deprecated in favour of {@link #message()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getMessage() {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.message); // Paper
     }
@@ -84,7 +84,7 @@ public class BroadcastMessageEvent extends ServerEvent implements Cancellable {
      * @param message New message to broadcast
      * @deprecated in favour of {@link #message(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setMessage(@NotNull String message) {
         this.message = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(message); // Paper
     }
diff --git a/src/main/java/org/bukkit/event/server/ServerListPingEvent.java b/src/main/java/org/bukkit/event/server/ServerListPingEvent.java
index 172697ac5dc0ea3551a61b5589416ac68f372cd1..fffe2ab5a9f282b60d5d7ae316c063d8945a65c0 100644
--- a/src/main/java/org/bukkit/event/server/ServerListPingEvent.java
+++ b/src/main/java/org/bukkit/event/server/ServerListPingEvent.java
@@ -113,7 +113,7 @@ public class ServerListPingEvent extends ServerEvent implements Iterable<Player>
      * @deprecated in favour of {@link #motd()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getMotd() {
         return net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.motd); // Paper
     }
@@ -124,7 +124,7 @@ public class ServerListPingEvent extends ServerEvent implements Iterable<Player>
      * @param motd the message of the day
      * @deprecated in favour of {@link #motd(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setMotd(@NotNull String motd) {
         this.motd = net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(motd); // Paper
     }
diff --git a/src/main/java/org/bukkit/inventory/InventoryView.java b/src/main/java/org/bukkit/inventory/InventoryView.java
index 2448e70d75ae7a678c6befac4506c103edb78875..b645af3ec4e90789014c2399fb00124665a86cfa 100644
--- a/src/main/java/org/bukkit/inventory/InventoryView.java
+++ b/src/main/java/org/bukkit/inventory/InventoryView.java
@@ -464,7 +464,7 @@ public abstract class InventoryView {
      * @return The title.
      * @deprecated in favour of {@link #title()}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     public abstract String getTitle();
 }
diff --git a/src/main/java/org/bukkit/inventory/meta/BookMeta.java b/src/main/java/org/bukkit/inventory/meta/BookMeta.java
index 36bcbb3f3acedf7ebecbf6f6b358cf64af0edfb2..8046b61a62f3cfecb6cd7cb7126b8cbc9617240e 100644
--- a/src/main/java/org/bukkit/inventory/meta/BookMeta.java
+++ b/src/main/java/org/bukkit/inventory/meta/BookMeta.java
@@ -241,7 +241,7 @@ public interface BookMeta extends ItemMeta, net.kyori.adventure.inventory.Book {
      * @deprecated in favour of {@link #page(int)}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     String getPage(int page);
 
     /**
@@ -257,7 +257,7 @@ public interface BookMeta extends ItemMeta, net.kyori.adventure.inventory.Book {
      * @param data the data to set for that page
      * @deprecated in favour of {@link #page(int, net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setPage(int page, @NotNull String data);
 
     /**
@@ -267,7 +267,7 @@ public interface BookMeta extends ItemMeta, net.kyori.adventure.inventory.Book {
      * @deprecated in favour of {@link #pages()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     List<String> getPages();
 
     /**
@@ -277,7 +277,7 @@ public interface BookMeta extends ItemMeta, net.kyori.adventure.inventory.Book {
      * @param pages A list of pages to set the book to use
      * @deprecated in favour of {@link #pages(List)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setPages(@NotNull List<String> pages);
 
     /**
@@ -287,7 +287,7 @@ public interface BookMeta extends ItemMeta, net.kyori.adventure.inventory.Book {
      * @param pages A list of strings, each being a page
      * @deprecated in favour of {@link #pages(net.kyori.adventure.text.Component...)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setPages(@NotNull String... pages);
 
     /**
@@ -297,7 +297,7 @@ public interface BookMeta extends ItemMeta, net.kyori.adventure.inventory.Book {
      * @param pages A list of strings, each being a page
      * @deprecated in favour of {@link #addPages(net.kyori.adventure.text.Component...)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void addPage(@NotNull String... pages);
 
     /**
diff --git a/src/main/java/org/bukkit/inventory/meta/ItemMeta.java b/src/main/java/org/bukkit/inventory/meta/ItemMeta.java
index f1e9a7626c4efb99be78f1056dc04b06bbe13c87..885625c1d54d81de47ed0bc42ee3250c4a54b492 100644
--- a/src/main/java/org/bukkit/inventory/meta/ItemMeta.java
+++ b/src/main/java/org/bukkit/inventory/meta/ItemMeta.java
@@ -59,7 +59,7 @@ public interface ItemMeta extends Cloneable, ConfigurationSerializable, Persiste
      * @return the display name that is set
      * @deprecated in favour of {@link #displayName()}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @NotNull
     String getDisplayName();
 
@@ -83,7 +83,7 @@ public interface ItemMeta extends Cloneable, ConfigurationSerializable, Persiste
      * @param name the name to set
      * @deprecated in favour of {@link #displayName(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setDisplayName(@Nullable String name);
 
     // Paper start
@@ -161,7 +161,7 @@ public interface ItemMeta extends Cloneable, ConfigurationSerializable, Persiste
      * @return a list of lore that is set
      * @deprecated in favour of {@link #lore()}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     @Nullable
     List<String> getLore();
 
@@ -185,7 +185,7 @@ public interface ItemMeta extends Cloneable, ConfigurationSerializable, Persiste
      * @param lore the lore that will be set
      * @deprecated in favour of {@link #lore(List)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setLore(@Nullable List<String> lore);
 
     /**
diff --git a/src/main/java/org/bukkit/map/MapCursor.java b/src/main/java/org/bukkit/map/MapCursor.java
index ca763b231749f108b6773040a5c6109378b21b31..6db6fc85bd4c8bb94f6afd6f42a8ba447c25ea4b 100644
--- a/src/main/java/org/bukkit/map/MapCursor.java
+++ b/src/main/java/org/bukkit/map/MapCursor.java
@@ -259,7 +259,7 @@ public final class MapCursor {
      * @deprecated in favour of {@link #caption()}
      */
     @Nullable
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public String getCaption() {
         return this.caption == null ? null : net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().serialize(this.caption); // Paper
     }
@@ -270,7 +270,7 @@ public final class MapCursor {
      * @param caption new caption
      * @deprecated in favour of {@link #caption(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     public void setCaption(@Nullable String caption) {
         this.caption = caption == null ? null : net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer.legacySection().deserialize(caption); // Paper
     }
diff --git a/src/main/java/org/bukkit/scoreboard/Objective.java b/src/main/java/org/bukkit/scoreboard/Objective.java
index b93b1b0428d11589605c8edf5c053369e1031076..140ac3ebdb0aab58093429faf67a31f7e527e625 100644
--- a/src/main/java/org/bukkit/scoreboard/Objective.java
+++ b/src/main/java/org/bukkit/scoreboard/Objective.java
@@ -47,7 +47,7 @@ public interface Objective {
      * @deprecated in favour of {@link #displayName()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     String getDisplayName() throws IllegalStateException;
 
     /**
@@ -60,7 +60,7 @@ public interface Objective {
      *     characters.
      * @deprecated in favour of {@link #displayName(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setDisplayName(@NotNull String displayName) throws IllegalStateException, IllegalArgumentException;
 
     /**
diff --git a/src/main/java/org/bukkit/scoreboard/Scoreboard.java b/src/main/java/org/bukkit/scoreboard/Scoreboard.java
index fc3456bb79f2fe1504359455b937c162780110c2..c39ca39190c8eacff9e68ef2edd54d814f06d2fb 100644
--- a/src/main/java/org/bukkit/scoreboard/Scoreboard.java
+++ b/src/main/java/org/bukkit/scoreboard/Scoreboard.java
@@ -89,7 +89,7 @@ public interface Scoreboard {
      * @deprecated in favour of {@link #registerNewObjective(String, String, net.kyori.adventure.text.Component)}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     Objective registerNewObjective(@NotNull String name, @NotNull String criteria, @NotNull String displayName) throws IllegalArgumentException;
 
     /**
@@ -113,7 +113,7 @@ public interface Scoreboard {
      * @deprecated in favour of {@link #registerNewObjective(String, String, net.kyori.adventure.text.Component, RenderType)}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     Objective registerNewObjective(@NotNull String name, @NotNull String criteria, @NotNull String displayName, @NotNull RenderType renderType) throws IllegalArgumentException;
 
     /**
diff --git a/src/main/java/org/bukkit/scoreboard/Team.java b/src/main/java/org/bukkit/scoreboard/Team.java
index 06a5d3177ca7ab90c3fd9d2053b2ec5e887c7c62..50d991df5680a1ee1eb2eb38d10adbdea7107dae 100644
--- a/src/main/java/org/bukkit/scoreboard/Team.java
+++ b/src/main/java/org/bukkit/scoreboard/Team.java
@@ -115,7 +115,7 @@ public interface Team {
      * @deprecated in favour of {@link #displayName()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     String getDisplayName() throws IllegalStateException;
 
     /**
@@ -127,7 +127,7 @@ public interface Team {
      * @throws IllegalStateException if this team has been unregistered
      * @deprecated in favour of {@link #displayName(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setDisplayName(@NotNull String displayName) throws IllegalStateException, IllegalArgumentException;
 
     /**
@@ -138,7 +138,7 @@ public interface Team {
      * @deprecated in favour of {@link #prefix()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     String getPrefix() throws IllegalStateException;
 
     /**
@@ -151,7 +151,7 @@ public interface Team {
      * @throws IllegalStateException if this team has been unregistered
      * @deprecated in favour of {@link #prefix(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setPrefix(@NotNull String prefix) throws IllegalStateException, IllegalArgumentException;
 
     /**
@@ -162,7 +162,7 @@ public interface Team {
      * @deprecated in favour of {@link #suffix()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     String getSuffix() throws IllegalStateException;
 
     /**
@@ -175,7 +175,7 @@ public interface Team {
      * @throws IllegalStateException if this team has been unregistered
      * @deprecated in favour of {@link #suffix(net.kyori.adventure.text.Component)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setSuffix(@NotNull String suffix) throws IllegalStateException, IllegalArgumentException;
 
     /**
@@ -189,7 +189,7 @@ public interface Team {
      * @deprecated in favour of {@link #color()}
      */
     @NotNull
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     ChatColor getColor() throws IllegalStateException;
 
     /**
@@ -202,7 +202,7 @@ public interface Team {
      * no color
      * @deprecated in favour of {@link #color(net.kyori.adventure.text.format.NamedTextColor)}
      */
-    @Deprecated // Paper
+    @Deprecated // Paper // Purpur - conflict on change
     void setColor(@NotNull ChatColor color);
 
     /**
